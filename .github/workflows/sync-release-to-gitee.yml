name: Sync GitHub Release to Gitee

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  sync_to_gitee:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download GitHub Release assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.release.tag_name }}
        asset_paths: ''
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Download assets files to local
      run: |
        mkdir -p assets
        gh release download "${{ github.event.release.tag_name }}" --dir assets
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Sync Release to Gitee
      env:
        GITEE_TOKEN: ${{ secrets.GITEE_TOKEN }}
        GITEE_REPO: ${{ secrets.GITEE_REPO }}
        RELEASE_TAG: ${{ github.event.release.tag_name }}
        RELEASE_NAME: ${{ github.event.release.name }}
        RELEASE_BODY: ${{ github.event.release.body }}
      run: |
        # 创建Gitee Release
        response=$(curl -s -X POST "https://gitee.com/api/v5/repos/${GITEE_REPO}/releases?access_token=${GITEE_TOKEN}" \
          -H "Content-Type: application/json" \
          -d "$(jq -n \
                --arg tag_name "$RELEASE_TAG" \
                --arg name "$RELEASE_NAME" \
                --arg body "$RELEASE_BODY" \
                '{tag_name: $tag_name, name: $name, body: $body, prerelease: false}')")

        release_id=$(echo "$response" | jq -r '.id')

        if [ "$release_id" = "null" ] || [ -z "$release_id" ]; then
          echo "Failed to create Gitee release. Response: $response"
          exit 1
        fi

        echo "Created Gitee release with ID: $release_id"

        # 上传所有资产
        for file in assets/*; do
          filename=$(basename "$file")
          echo "Uploading asset: $filename"

          upload_response=$(curl -s -X POST "https://gitee.com/api/v5/repos/${GITEE_REPO}/releases/${release_id}/assets?access_token=${GITEE_TOKEN}" \
            -F "name=${filename}" \
            -F "attachment=@${file}")

          echo "Upload response: $upload_response"
        done
